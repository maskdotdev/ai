@import 'tailwindcss';

@plugin '@tailwindcss/typography';
@config '../../typography.ts';

@custom-variant dark (&:where(.dark, .dark *));

@theme {
  --text-xs: 0.8125rem;
  --text-xs--line-height: 1.5rem;
  --text-sm: 0.875rem;
  --text-sm--line-height: 1.5rem;
  --text-base: 1rem;
  --text-base--line-height: 1.75rem;
  --text-lg: 1.125rem;
  --text-lg--line-height: 1.75rem;
  --text-xl: 1.25rem;
  --text-xl--line-height: 2rem;
  --text-2xl: 1.5rem;
  --text-2xl--line-height: 2rem;
  --text-3xl: 1.875rem;
  --text-3xl--line-height: 2.25rem;
  --text-4xl: 2rem;
  --text-4xl--line-height: 2.5rem;
  --text-5xl: 3rem;
  --text-5xl--line-height: 3.5rem;
  --text-6xl: 3.75rem;
  --text-6xl--line-height: 1;
  --text-7xl: 4.5rem;
  --text-7xl--line-height: 1;
  --text-8xl: 6rem;
  --text-8xl--line-height: 1;
  --text-9xl: 8rem;
  --text-9xl--line-height: 1;
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));

  --color-sidebar: hsl(var(--sidebar-background));
  --color-sidebar-foreground: hsl(var(--sidebar-foreground));
  --color-sidebar-primary: hsl(var(--sidebar-primary));
  --color-sidebar-primary-foreground: hsl(var(--sidebar-primary-foreground));
  --color-sidebar-accent: hsl(var(--sidebar-accent));
  --color-sidebar-accent-foreground: hsl(var(--sidebar-accent-foreground));
  --color-sidebar-border: hsl(var(--sidebar-border));
  --color-sidebar-ring: hsl(var(--sidebar-ring));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer utilities {
  body {
    font-family: Arial, Helvetica, sans-serif;
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 240 5.3% 26.1%;
    --sidebar-primary: 240 5.9% 10%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 240 4.8% 95.9%;
    --sidebar-accent-foreground: 240 5.9% 10%;
    --sidebar-border: 220 13% 91%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  /* Shiki theme variables */
  :root {
    --shiki-foreground: var(--color-foreground);
    --shiki-background: transparent;
  }

  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  /* Shiki dark theme variables */
  .dark {
    --shiki-foreground: var(--color-foreground);
    --shiki-background: transparent;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Light mode styles */
code[data-theme],
code[data-theme] span {
  color: var(--shiki-light) !important;
  background-color: var(--shiki-light-bg) !important;
}

/* Dark mode styles */
.dark code[data-theme],
.dark code[data-theme] span {
  color: var(--shiki-dark) !important;
  background-color: var(--shiki-dark-bg) !important;
}

/* Add styles for code blocks */
pre {
  overflow-x: auto;
  padding: 1rem 0;
}

pre > code {
  display: grid;
  min-width: 100%;
}

pre [data-line] {
  padding: 0 1rem;
}

@media (prefers-color-scheme: dark) {
  code[data-theme],
  code[data-theme] span {
    color: var(--shiki-dark);
    background-color: var(--shiki-dark-bg);
  }
}

code[data-line-numbers] {
  counter-reset: line;
}

code[data-line-numbers] > [data-line]::before {
  counter-increment: line;
  content: counter(line);

  /* Other styling */
  display: inline-block;
  width: 0.75rem;
  margin-right: 2rem;
  text-align: right;
  color: gray;
}

code[data-line-numbers-max-digits='2'] > [data-line]::before {
  width: 1.25rem;
}

code[data-line-numbers-max-digits='3'] > [data-line]::before {
  width: 1.75rem;
}

code[data-line-numbers-max-digits='4'] > [data-line]::before {
  width: 2.25rem;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@import './terminal.css';

@layer base {
  :root {
    --shiki-color-text: theme('colors.white');
    --shiki-token-constant: theme('colors.emerald.300');
    --shiki-token-string: theme('colors.emerald.300');
    --shiki-token-comment: theme('colors.zinc.500');
    --shiki-token-keyword: theme('colors.sky.300');
    --shiki-token-parameter: theme('colors.pink.300');
    --shiki-token-function: theme('colors.violet.300');
    --shiki-token-string-expression: theme('colors.emerald.300');
    --shiki-token-punctuation: theme('colors.zinc.200');
  }

  [inert] ::-webkit-scrollbar {
    display: none;
  }
}

@layer base {
  :root {
    --matrix-green: 0 255 0;
    --matrix-black: 0 0 0;
  }
}

@layer components {
  .matrix-background {
    @apply relative overflow-hidden;
  }

  .matrix-background::before {
    content: "";
    @apply absolute inset-0 pointer-events-none;
    background: linear-gradient(180deg, 
      rgb(var(--matrix-black) / 0) 0%,
      rgb(var(--matrix-green) / 0.03) 50%,
      rgb(var(--matrix-black) / 0) 100%
    );
    background-size: 100% 200%;
    animation: matrix-rain 10s linear infinite;
  }

  .matrix-chars {
    @apply absolute inset-0 pointer-events-none overflow-hidden;
  }

  .matrix-chars::before {
    content: "ﾊﾐﾋｰｳｼﾅﾓﾆｻﾜﾂｵﾘｱﾎﾃﾏｹﾒｴｶｷﾑﾕﾗｾﾈｽﾀﾇﾍ";
    @apply absolute font-mono text-xs leading-none whitespace-nowrap text-[rgb(var(--matrix-green))] opacity-10;
    writing-mode: vertical-rl;
    animation: matrix-chars 2s linear infinite;
  }

  .matrix-chars::after {
    content: "ｦｲｸｺｿﾁﾄﾉﾌﾔﾖﾙﾚﾛﾝ0123456789";
    @apply absolute font-mono text-xs leading-none whitespace-nowrap text-[rgb(var(--matrix-green))] opacity-10;
    writing-mode: vertical-rl;
    animation: matrix-chars 3s linear infinite;
    animation-delay: 1s;
  }

  .matrix-text {
    @apply text-[rgb(var(--matrix-green))];
    text-shadow: 
      0 0 10px rgb(var(--matrix-green) / 0.6),
      0 0 20px rgb(var(--matrix-green) / 0.4),
      0 0 30px rgb(var(--matrix-green) / 0.2);
  }

  .matrix-edge {
    @apply transition-all duration-200;
    stroke-dasharray: 4;
    stroke-dashoffset: 0;
    animation: matrix-flow 0.5s linear infinite;
  }

  .matrix-decode {
    @apply relative;
  }

  .matrix-cursor {
    @apply relative;
  }

  .matrix-cursor::after {
    content: "█";
    @apply absolute ml-0.5;
    animation: cursor-blink 1s step-end infinite;
  }
}

@layer utilities {
  .animate-matrix-glow {
    animation: matrix-glow 2s ease-in-out infinite;
  }

  .animate-matrix-pulse {
    animation: matrix-pulse 2s ease-in-out infinite;
  }

  .animate-matrix-fade {
    animation: matrix-fade 1s ease-in-out;
  }

  .animate-matrix-rain {
    animation: matrix-rain 20s linear infinite;
  }

  .shadow-matrix {
    box-shadow: 
      0 0 10px rgb(var(--matrix-green) / 0.3),
      0 0 20px rgb(var(--matrix-green) / 0.2),
      0 0 30px rgb(var(--matrix-green) / 0.1);
  }

  .shadow-matrix-strong {
    box-shadow: 
      0 0 15px rgb(var(--matrix-green) / 0.5),
      0 0 30px rgb(var(--matrix-green) / 0.3),
      0 0 45px rgb(var(--matrix-green) / 0.2);
  }
}

@keyframes matrix-rain {
  0% { background-position: 0% 0%; }
  100% { background-position: 0% 100%; }
}

@keyframes matrix-chars {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  50% {
    opacity: 0.1;
    transform: translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateY(20px);
  }
}

@keyframes matrix-flow {
  from { stroke-dashoffset: 0; }
  to { stroke-dashoffset: 8; }
}

@keyframes matrix-glow {
  0%, 100% {
    text-shadow: 
      0 0 10px rgb(var(--matrix-green) / 0.6),
      0 0 20px rgb(var(--matrix-green) / 0.4),
      0 0 30px rgb(var(--matrix-green) / 0.2);
  }
  50% {
    text-shadow: 
      0 0 15px rgb(var(--matrix-green) / 0.8),
      0 0 25px rgb(var(--matrix-green) / 0.6),
      0 0 35px rgb(var(--matrix-green) / 0.4);
  }
}

@keyframes matrix-pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

@keyframes matrix-fade {
  0% {
    opacity: 0;
    transform: translateY(-10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes cursor-blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}
